;--
poison has 3 properties
% of hit
Number of turns it's effective
damage per turn

--;
[poison]
exten => s,1,Verbose(3, ${HERONUM} Poison handling)
exten => s,Gosub(debug,s,1(poison))
;  //todo loop poison info get time^severity
  same => n,Set(POISON_COUNTER=$[${POISON_COUNTER} - 1])
  same => n,NoOp(Armor check poison immunity)
  same => n,Playback(dungeon/poison/poisonhurt)
  same => n,Set(herohealth=${EVAL(${MATH(${herohealth} - ${POISON_DAMAGE},i)})})
  same => n,GosubIf($[${POISON_COUNTER} < 1]?endpoison)
  same => n,Return
  same => n(endpoison),Verbose(3, ${HERONUM} Poison effect ends)
  same => n,Set(POISON_COUNTER=0)
  same => n,Set(POISON_DAMAGE=0)
  same => n,Playback(dungeon/poison/endpoison)
  same => n,Return

[poison_battle]
exten => s,1,Verbose(3, ${HERONUM} Battle poison handler)
  same => n,GotoIf($[${POISON_COUNTER} > 0]?battle)
; set poison
  same => n,Set(LOCAL(poison_info)=${ARG1})
  same => n,NoOp(percent:${CUT(poison_info,-,1)} rand:${RAND(1,100)})
;  same => n,ExecIf($[${CUT(poison_info,-,1)} > ${RAND(1,100)}}]?Return)
  same => n,Set(POISON_COUNTER=${CUT(poison_info,-,2)})
  same => n,Set(POISON_DAMAGE=${CUT(poison_info,-,3)})
  
  same => n(battle),Verbose(3, ${HERONUM} You have been poisoned! )
  same => n,Playback(dungeon/poison/startpoison)
; send to normal poison handler
  same => n,Gosub(poison,s,1(${ARG1},${who}))
  same => n,Return
