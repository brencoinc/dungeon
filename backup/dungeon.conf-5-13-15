[dungeon]
include => compass

exten => s,1(start),NoOp(Dungeon Start)
same => n,Set(LVL=0)
same => n,Set(encounter=0)
same => n,Set(Room=s)
same => n,Set(strength=1)
same => n,Set(weapon=1)
same => n,Set(fighthealth=0)
same => n(movement),NoOp(movement)
same => n,background(dungeon/drip)
same => n,Goto(t,timeout)
same => n,hangup


exten => t,1(timeout),NoOp(timeout loop)
same => n,Goto($Room,1)
same => n,hangup

exten => i,1(invalid),NoOp(Invalid option)
same => n,GoTo(s,1)


[compass]
exten => s,1,NoOp(Compass subroutine)
same => n,Return

exten => 2,1,NoOp(North)
same => n,Set(GO=N)
same => n,Gosub(position,s,1)
same => n,Return

exten => 6,1,NoOp(East)
same => n,Set(GO=e)
same => n,Gosub(position,s,1)
same => n,Return

exten => 4,1,NoOp(West)
same => n,Set(GO=W)
same => n,Gosub(position,s,1)
same => n,Return

exten => 8,1,NoOp(North)
same => n,Set(GO=S)
same => n,Gosub(position,s,1)
same => n,Return

;with each step add a value to X, later make encounter - rand+x. 
;After a succesful encounter reset x to 0

exten => 9,1,NoOp(level test)
same => n,Set(LVL=$[${LVL}+1])
same => n,Gosub(position,s,1)
same => n,Hangup

[position]
exten => s,1,NoOp(Position)
same => n,Set(encounter=${RAND(1,20)})
same => n,Set(encounter=$[${encounter} + ${LVL}])
same => n,NoOp(Danger number is ${encounter})
same => n,Playback(dungeon/steps)
same => n,GotoIf($[${encounter} > 6]?attack)
same => n,Goto(dungeon,s,movement)
same => n(return),Return
same => n(attack),Goto(attack,s,1)
same => n,Hangup

[attack]
exten => s,1(start),NoOp(Attack start)
same => n,Background(dungeon/attack)
same => n(begin),NoOp(Battle Begins!)
same => n,GoSub(monsterstats,s,1)
same => n,NoOp(Monster Level is ${monsterlvl})
same => n,NoOp(Monster Strength is ${monsterstr})
same => n,NoOp(Monster Attack is ${monsterattack})
same => n,NoOp(Monster Health is ${monsterhealth})
same => n,NoOp(Hero strength is ${strength})
same => n,NoOp(Hero weapon is ${weapon})
same => n(roll),Set(enemyattack=${RAND(1,20)})
;same => n,NoOp(Enemy Attack Roll is ${enemyattack})
;enemy gets first attack
;set up enemy attack vs your health
;
same => n,Set(attackroll=${RAND(1,20)})
same => n,NoOp(Hero Attack roll is ${attackroll})
same => n,GotoIf($[${attackroll} > 10]?hit)
same => n,NoOp(Miss!)
same => n,Background(dungeon/miss)
same => n,Goto(roll)
;
same => n(hit),NoOp(Hit!)
same => n,Playback(silence/2)
;same => n,Background(dungeon/hit)
same => n,Set(attack=$[${attackroll} + ${weapon}])
same => n,NoOp(Modified attack is ${attack})
same => n,NoOp(fighthealth is ${fighthealth})
same => n,Set(fighthealth=${MATH(${monsterhealth}-${attack},i)})
same => n,NoOp(Monster health is ${fighthealth})
same => n,Playback(silence/2)
same => n,GotoIf($[${fighthealth} < 1]?victory)
same => n,Goto(s,roll)
same => n(victory),NoOp(Vrictory!)
same => n,Background(dungeon/victory)
same => n,Goto(position,s,return)
same => n,Hangup


exten => i,1(invalid),NoOp(Invalid option)
same => n,GoTo(s,1)

exten => 9,1,NoOp(begin attack)
same => n,Goto(s,begin)

[monsterstats]
exten => s,1,NoOp(Monster Stats)
same => n,Set(monsterlvl=2)
same => n,Set(monsterstr=${RAND(10,20)})
same => n,Set(monsterattack=$[${monsterstr} * ${monsterlvl}])
same => n,set(monsterhealth=$[${RAND(20,30)} * ${monsterlvl}])
same => n,Return

