[dungeon-test]
exten => s,1,NoOp()
same => n,SayDigits(10)
same => n,SayNumber(10)

 same => n,Gosub(dungeon-test2,s,100(keys))
 same => n,NoOp(GOSUB_RETVAL:${GOSUB_RETVAL})
 same => n,Return

[dungeon-test2]
exten => s,1,Verbose(${EXTEN} test space)
  same => n,Set(items=t6^k5^m-x5y10^h10)
  same => n,Set(LOCAL(pocket_contents)=${FIELDQTY(items,^)})  ; db pull puts string into items
  same => n,Set(LOCAL(counter)=1)
  same => n,While($[${counter} < $[${pocket_contents}+1]])
    same => n,Set(LOCAL(current_item)=${CUT(items,^,${counter})})
    same => n,GosubIf($["${current_item:0:1}" = "k"]?keys(${current_item:1}))
    same => n,GosubIf($["${current_item:0:1}" = "h"]?health(${current_item:1}))
    same => n,GosubIf($["${current_item:0:1}" = "t"]?torch(${current_item:1}))
    same => n,ExecIf($["${current_item:0:1}" = "endloop"]?Set(counter=$[${pocket_contents}]))
  same => n,EndWhile(${INC(counter)})
  same => n,Return

same => n(keys),Verbose(arg1:${ARG1} arg2:${ARG2})
same => n,Return

same => n(health),Verbose(arg1:${ARG1} arg2:${ARG2})
same => n,Return

same => n(torch),Verbose(arg1:${ARG1} arg2:${ARG2})
same => n,Return


same => 100,Verbose(check for ${ARG1})
same => n,Set(endloop=k)
same => n,Gosub(s,1)
same => n,Return
