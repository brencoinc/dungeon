[itemmaker]
exten => s,1,Verbose(3, Begin Item decision tree)
  same => n,Verbose(3, Monster points: ${monster_points} top value $[${monster_points}+ ${hero_luck}])
  same => n,Set(__itempt=${RAND(1,$[${monster_points}+ ${hero_luck}])})
  same => n,Verbose(3, Item point:${itempt}) 
  same => n,Set(__itemluck=${RAND(1,${hero_luck})})
same => n,Goto(lvl1)
  same => n,GotoIf($[${itempt} > 99 ]?lvl1)
  same => n,GotoIf($[${itempt} > 90 ]?lvl2)
  same => n,GotoIf($[${itempt} > 75 ]?lvl3)
  same => n,GotoIf($[${itempt} > 50 ]?lvl4)
  same => n,GotoIf($[${itempt} > 25 ]?lvl5)
  same => n,GotoIf($[${itempt} > 9 ]?lvl6)
  same => n,Return

  same => n(lvl1),Verbose(3, Item level1 dropped)
  same => n,Set(__itemlevel=1)
  same => n,GosubIf($[${itemluck}>3]?itemhandle,s,1(health,${itemlevel}))
  same => n,Return
;
  same => n(lvl2),Verbose(3, Item level2 dropped)
  same => n,Set(__itemlevel=2)
;
  same => n(lvl3),Verbose(3, Item level3 dropped)
  same => n,Set(__itemlevel=3)
;
  same => n(lvl4),Verbose(3, Item level4 dropped)
  same => n,Set(__itemlevel=4)
;
  same => n(lvl5),Verbose(3, Item level5 dropped)
  same => n,Set(__itemlevel=5)
;
  same => n(lvl6),Verbose(3, Item level6 dropped)
  same => n,Set(__itemlevel=6)
;
[itemhandle]
exten => s,1,Verbose(3, Item is power level ${itemlevel})
  same => n,Set(HASH(item_stats)=${GET_ITEM_STATS(${ARG1},${ARG2})})
  same => n,Playback(dungeon/items/youve-found&dungeon/items/${HASH(item_stats,item_name)})
  same => n,Background(dungeon/items/keepitem)
same => n,Goto(1,1)
  same => n,Background(silence/3)
  same => n,Return

exten => 1,1,Verbose(3, ${heronum},${HASH(item_stats,item_mod_name)},${HASH(item_stats,item_points)})
same => n,NoOp(${heronum},${ARG1},${HASH(item_stats,item_points)})
  same => n,GotoIf($['${HASH(item_stats,item_type)}' = 'weapon']?weapon)
  same => n,GotoIf($['${HASH(item_stats,item_type)}' = 'health']?weapon)
  same => n,GotoIf($['${HASH(item_stats,item_type)}' = 'torch']?weapon)
  same => n,GotoIf($['${HASH(item_stats,item_type)}' = 'keys']?weapon)
  same => n,Return
;
  same => n(weapon),Verbose(3, Item is ${HASH(item_stats,item_name)})
  same => n,NoOp(Save item stats ${PUT_ITEM_STATS(${heronum},${ARG1},${HASH(item_stats,item_mod_name)},${HASH(item_stats,item_points)})})
  same => n,NoOp(Update weapon name ${PUT_ONE_OFF(players,weapon_name,${HASH(item_stats,item_name)},${heronum})})
  same => n,Return

  same => n(health),Verbose(3, Item is ${HASH(item_stats,item_name)})
  same => n,Set(__math=$[${HASH(item_stats,item_points)} + ${GET_HERO_HEALTH(${heronum})}])
  same => n,NoOp(Save item stats ${PUT_ITEM_STATS(${heronum},${ARG1},${HASH(item_stats,item_mod_name)},${math})})
  same => n,Return

  same => n(torch),Verbose(3, Item is ${HASH(item_stats,item_name)})
  same => n,Set(__math=$[${HASH(item_stats,item_points)} + ${GET_HERO_HEALTH(${heronum})}])
  same => n,NoOp(Save item stats ${PUT_ITEM_STATS(${heronum},${ARG1},${HASH(item_stats,item_mod_name)},${math})})
  same => n,Return

  same => n(keys),Verbose(3, Item is ${HASH(item_stats,item_name)})
  same => n,NoOp(Update weapon name ${PUT_ONE_OFF(players,weapon_name,${HASH(item_stats,item_name)},${heronum})})
  same => n,Return
