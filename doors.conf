[doorway]
include => hangup

exten => s,1,Verbose(3, Door handler)
  same => n,GotoIf($[${EXISTS(${GET_DUNGEON_CHECK_DOOR(x${Xgps}y${Ygps},${heronum})})}]?opendoor)
  same => n,Verbose(3, Door type ${ARG1} found)
  same => n,Playback(dungeon/compass/door)
  same => n,Background(dungeon/stats/doorkeys)
  same => n,SayDigits(${HASH(hero_stats,doorkeys)})
;  same => n,Background(dungeon/stats/usekeys)
  same => n,Read(choice,dungeon/doors/usekey,1,,,5)
  same => n,Goto(${choice},1)
;  same => n,Goto(2,1) ; need a way to handle not using key
  same => n(opendoor),Verbose(3, Door is open); option to play a sound
  same => n,Return

exten => 1,1,Verbose(3, Use Keys)
  same => n,GotoIf($[${HASH(hero_stats,doorkeys)} < 1]?nokeys)
; same => n,Break down door option
;same => n,NoOp(Maths: hash:${HASH(hero_stats,keys)} math ${MATH(${HASH(hero_stats,keys)} -1,i)} bracket $[${HASH(hero_stats,keys)} -1])
  same => n,Verbose(3, Use Key ${PUT_ONE_OFF(players,doorkeys,${MATH(${HASH(hero_stats,doorkeys)}-1,i)},${heronum})} ${PUT_DUNGEON_OPEN_DOOR(x${Xgps}y${Ygps},${heronum})})
  same => n,Playback(dungeon/doors/opendoor)
  same => n,Return
  same => n(nokeys),Verbose(3, No keys left)
  same => n,Playback(dungeon/items/nokeys)
  same => n,Goto(2,1)

exten => 2,1,Verbose(3, walk away)
;  same => n,Playback(compass/turnaround
  same => n,Set(runaway=1)
  same => n,Return

exten => i,1,Verbose(3, invalid entry, walk away)
  same => n,Goto(2,1)
