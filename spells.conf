[spell_handler]

exten => start,1,Verbose(3, Begin spell handling)
  same => n,Gosub(debug,s,1(spellcast))
  same => n,Read(spellno,dungeon/spells/castyourspell,6,,1,10)
  same => n,Verbose(3, Spell ${spellno} cast begin lookup)
  same => n,Set(HASH(spell_info)=${GET_SPELL_LOOKUP(${spellno})})
;  same => n,GotoIf(${hero_spell_power} < ${HASH(spell_info,spell_casting_power)}?weak)
  same => n,GotoIf(${ISNULL(${HASH(spell_info,spell_type)})}?fail)
  same => n,Playback(dungeon/spells/${HASH(spell_info,spell_name)})
;  same => n,GotoIf($["${HASH(spell_info,spell_casting_power)}" < "${spell_power_battle}"]?fail)
  same => n,GotoIf($[${HASH(spell_info,spell_type)} = 1]?attack)
  same => n,GotoIf($[${HASH(spell_info,spell_type)} = 2]?heal)
  same => n,GotoIf($[${HASH(spell_info,spell_type)} = 3]?defense)
  same => n,Return


  same => n(attack),Verbose(3, Spell type is ATTACK)

  ;same => n,GotoIf($[${attackroll} < ${monster_agil}]?miss)
  same => n,GotoIf($[$[11 - ${HASH(spell_info,spell_lvl)}] < ${monster_level}]?miss)
same => n,GotoIf($[${attackroll} < 5]?miss)           ;set for testing

  same => n,Playback(dungeon/${who}_hit)
  same => n,Set(attackholder=${attack})
  same => n,Set(attack=${MATH(${attack} * 2,i)})
  same => n,Gosub(fightshortener,s,1)
  same => n,Set(attack=${attackholder})
  same => n,Verbose(3,LOG ${heronum} ${who} health is ${${who}health})
;  same => n,ExecIf($[${attacker}=M]?Set(attacker=H):Set(attacker=M))
  same => n,Return()

  same => n(heal),Verbose(3, Spell type is HEAL)
  same => n,Return()

  same => n(defense),Verbose(3, Spell type is DEFENSE)
  same => n,Return()

  same => n(fail),Verbose(3, Spell Failure)
  same => n,Playback(dungeon/spells/failure)
  same => n,Return

  same => n(miss),Verbose(3, Spell attack Missed)
  same => n,Gosub(fail)
  same => n,Return()

[magicmonster]
exten => start,1,Gosub(playerlog,s,1)
  same => n,Set(LOCAL(HASH(magic_monster_info)=${GET_MONSTER_ITEM}))
  same => n,Set(LOCAL(magic_monster_weapon)=${GET_SPELL_LOOKUP(${$HASH(magic_monster_info,monster_item)})})
  same => n,Set(monsterweapon=${magic_monster_weapon})
  same => n,Return
