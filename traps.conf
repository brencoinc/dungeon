[trap]
include => hangup

exten => s,1(start),Verbose(3, LOG ${heronum} Has fallen into a trap!)
 same => n,Verbose(3, LOG ${heronum} Mkey is ${HASH(movement_info,trap_key)})
 same => n,GotoIf($[${EXISTS(${GET_DUNGEON_SPRUNG_TRAP(x${Xgps}y${Ygps},${heronum})})}]?sprungtrap)
;same => n,Set(HASH(trap_stats)=${GET_DUNGEON_trap_stats(${GET_MOVEMENT_MONSTER_KEY(${Xgps},${Ygps})})})
;same => n,Set(trap_name=${HASH(
 same => n,Set(ARRAY(LOCAL(trap_name),LOCAL(trap_agil),LOCAL(trap_strength),LOCAL(trap_damage),LOCAL(trap_deadly))=${GET_DUNGEON_TRAP_STATS(${HASH(movement_info,trap_key)})})
 same => n,Playback(dungeon/traps/${trap_name})
 same => n,GotoIf($[${trap_type} = 1]?spikes)
 same => n,GotoIf($[${trap_type} = 2]?pit)

 same => n,Goto(rubbel)
 same => n(rubbel),Verbose(3, rubbel in the way)
 same => n,Playback(dungeon/traps/rubbel1)
 same => n,Set(runaway=1)
 same => n,Return



same => n(sprungtrap),Verbose(3,Room has a trap that has already been sprung)
;same => n,Playback(deadmonster)
same => n,Return
