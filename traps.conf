[trap]
include => hangup

exten => s,1(start),Verbose(3, LOG ${heronum} Has fallen into a trap! Trapkey:${ARG1})
; same => n,Verbose(3, LOG ${heronum} trap_key is ${HASH(movement_info,trap_key)})
;same => n,Set(HASH(trap_stats)=${GET_DUNGEON_trap_stats(${GET_MOVEMENT_MONSTER_KEY(${Xgps},${Ygps})})})
 same => n,Set(ARRAY(LOCAL(trap_name),LOCAL(trap_agil),LOCAL(trap_strength),LOCAL(trap_damage),LOCAL(trap_deadly),LOCAL(trap_trap))=${GET_DUNGEON_TRAP_STATS(${ARG1})})
same => n,NoOp(x:${Xgps}, y:${Xgps}, value:${GET_DUNGEON_SPRUNG_TRAP(x${Xgps}y${Ygps},${heronum})})
 same => n,GotoIf($[${EXISTS(${GET_DUNGEON_SPRUNG_TRAP(x${Xgps}y${Ygps},${heronum})})}]?${trap_name}_sprung)
; same => n,Playback(dungeon/traps/${trap_name})
 same => n,GotoIf($["${trap_type}" = 1]?spikes)
 same => n,GotoIf($["${trap_type}" = 2]?pit)
 same => n,GotoIf($["${trap_type}" = 3]?celing_collapse)
;
 same => n(celing_collapse),Verbose(3, rubbel in the way)
 same => n,Set(runaway=1)
 same => n,GoSub(survive_check) 
 same => n,Return() 
same => n(celing_collapse_sprung),Playback(dungeon/traps/celing_collapse_sprung)
 same => n,Set(runaway=1)
 same => n,Return
;
 same => n(spikes),Verbose(3, Spikes!)
 same => n,Gosub(survive_check)
 same => n(spikes_sprung),Playback(dungeon/traps/spikes_sprung)
 same => n,Return
 
;
 same => n(pit),Verbose(3, A pit opens!)
 same => n,Gosub(survive_check)
 same => n(pit_sprung),Playback(dungeon/traps/pit_sprung)
 same => n,Return()

 same => n(survive_check),Verbose(3, Survive check)
 same => n,Playback(dungeon/traps/${trap_name}_start) 
 same => n,GotoIf($[${hero_agil} < ${trap_agil}}]?trapfail)
 same => n,NoOp(some trap survival stuff)
 same => n(spring_trap),NoOp(${PUT_DUNGEON_SPRUNG_TRAP(x${Xgps}y${Ygps},${heronum})})
 same => n,Playback(dungeon/traps/${trap_name}_survive)
 same => n,Return

same => n(trapfail),Verbose(3, Oh no! Too slow!)
same => n,Set(herohealth=${EVAL(${MATH(${herohealth}-${trap_strength},i)})})
same => n,GosubIf($[${herohealth} < 1]?defeat)
same => n,Return

same => n(defeat),Verbose(3,LOG ${heronum} The trap has beaten you)
same => n,Playback(dungeon/traps/${trap_name}_defeat)
same => n,NoOp(play some sound here)
same => n,GoSub(defeat,s,1)
same => n,Hangup
