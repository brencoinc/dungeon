[position]
exten => s,1,Verbose(3,LOG ${heronum} Position)
same => n,Verbose(3, LOG ${heronum} position is X=${Xgps} Y=${Ygps})
same => n,Verbose(3, LOG ${heronum} MOVEMENT_FIND_FOOTPRINT:${GET_MOVEMENT_FIND_FOOTPRINT(${heronum})})
same => n(steps),Playback(dungeon/steps)
same => n,Set(HASH(movement_info)=${GET_MOVEMENT_ROOM_INFO(${Xgps},${Ygps})})
;db check if room is empty or has a door
same => n,GosubIf($[${EXISTS(${HASH(movement_info,monster_key)})}]?attack,s,1)
same => n,GosubIf($[${EXISTS(${HASH(movement_info,doorway)})}]?doorway,s,1)
isame => n,ExecIf($[${torch} = 1]?Playback(dungeon/compass/lightsout)) ; If they have 1 torch left play sound as it runs out
same => n,ExecIf($[${torch} > 0]?Set(torch=$[${torch}-1])); If they have any torches remove 1
same => n,GotoIf($[${runaway} = 1]?runaway) ; If they return after escaping a monster or closed door don't save position 
same => n,Verbose(3, LOG ${heronum} save position is X=${Xgps} Y=${Ygps} ${PUT_MOVEMENT_SAVE_FOOTPRINT(${Xgps},${Ygps},${heronum})}) ; save current position
same => n(return),Return
same => n(runaway),Verbose(3, Run away) ; run from monster or locked door
same => n,Set(__runaway=0)
same => n,Goto(return)

[compass]
exten => s,1,Verbose(3,LOG ${heronum} Compass subroutine)
same => n,Set(HASH(footprints)=${GET_MOVEMENT_FIND_FOOTPRINT(${heronum})})
same => n,NoOp(X:${Xgps} Y:${Ygps})
same => n,Playback(dungeon/compass/${GET_MOVEMENT_GPS(${HASH(footprints,gps_xpos)},${HASH(footprints,gps_ypos)})}${RAND(1,2)})
same => n,Return

exten => 2,1,Verbose(3,LOG ${heronum} North)
same => n,NoOp(X:${Xgps} Y:${Ygps})
same => n,ExecIf($[${ISNULL(${GET_MOVEMENT_GPS(${HASH(footprints,gps_xpos)},${MATH(${HASH(footprints,gps_ypos)}-1)})})}]?Goto(ww,1):Set(Ygps=${MATH(${Ygps}-1,i)}))
same => n,Gosub(position,s,1)
same => n,Goto(dungeon,s,movement)

exten => 6,1,Verbose(3,LOG ${heronum} East)
same => n,ExecIf($[${ISNULL(${GET_MOVEMENT_GPS(${MATH(${HASH(footprints,gps_xpos)}+1)},${HASH(footprints,gps_ypos)})})}]?Goto(ww,1):Set(Xgps=${MATH(${Xgps}+1,i)}))
same => n,Gosub(position,s,1)
same => n,Goto(dungeon,s,movement)

exten => 4,1,Verbose(3,LOG ${heronum} West)
same => n,ExecIf($[${ISNULL(${GET_MOVEMENT_GPS(${MATH(${HASH(footprints,gps_xpos)}-1)},${HASH(footprints,gps_ypos)})})}]?Goto(ww,1):Set(Xgps=${MATH(${Xgps}-1,i)}))
same => n,Gosub(position,s,1)
same => n,Goto(dungeon,s,movement)

exten => 8,1,Verbose(3,LOG ${heronum} South)
same => n,ExecIf($[${ISNULL(${GET_MOVEMENT_GPS(${HASH(footprints,gps_xpos)},${MATH(${HASH(footprints,gps_ypos)}+1)})})}]?Goto(ww,1):Set(Ygps=${MATH(${Ygps}+1,i)}))
same => n,Gosub(position,s,1)
same => n,Goto(dungeon,s,movement)
;
;
exten => 7,1,Verbose(3,LOG ${heronum} use a torch)
same => n,GotoIf($[${GET_HERO_TORCH(${heronum})} < 1]?nolight)
;same => n,Set(torch=5)
same => n,Playback(dungeon/compass/torchlight)
same => n,Goto(dungeon,s,movement)
same => n(nolight),Verbose(3, LOG ${heronum} no torches to light)
same => n,Playback(dungeon/compass/notorches)
same => n,Goto(dungeon,s,movement)


exten => 5,1,Verbose(3,LOG ${heronum} Item search)
same => n,Playback(dungeon/item/youve-found)
same => n,GotoIf($[${ISNULL(${GET_DUNGEON_ITEMS(${Xgps},${Ygps})})}]?empty)
same => n,Goto(${GET_DUNGEON_ITEMS(${Xgps},${Ygps})})
same => n(torch),Verbose(3 LOG ${heronum} Found the Torch)
same => n,Playback(dungeon/item/${GET_DUNGEON_ITEMS(${Xgps},${Ygps})})
same => n,Set(torch=1); meed to fix
same => n,Verbose(3,LOG ${heronum} torch is ${torch} eval is ${EVAL(${torch})})
same => n,Gosub(position,s,1)
same => n(empty),Verbose(3,LOG ${heronum} nothing here)
same => n,Playback(dungeon/item/empty)
same => n,Gosub(position,s,1)
same => n,Goto(dungeon,s,movement)


exten => i,1,Verbose(3,LOG ${heronum} Invalid entry)
same => n,Goto(dungeon,s,movement)

exten => ww,1,Verbose(3,LOG ${heronum} Wrong Way)
;secret room check
same => n,Playback(dungeon/compass/wrongway)
same => n,Playback(silence/2)
same => n,Goto(dungeon,s,movement)
same => n(secret),Verbose(3 ${heronum} secret room found)
